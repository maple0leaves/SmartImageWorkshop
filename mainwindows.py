# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindows.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.



#自适应大小，放大和缩小组件都要跟着动
#在self.centralwidget中添加girdLayout，然后在合适的行列中添加widget，然后再添加girdlayout
#在gridlayout添加2x4=8个button
from PyQt5 import QtCore
from PyQt5.QtGui import QFont
from PyQt5.QtWidgets import QApplication, QWidget, QLabel, QLineEdit, QPushButton, \
    QGridLayout, QVBoxLayout, QHBoxLayout, QMenuBar, QStatusBar, QSizePolicy,QTextEdit
from tools.common_helper import CommonHelper
'''
QtWidgets.QWidget()感觉就是在哪个控件上生成一个QWidget，就是父控件和子控件
'''
class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        # 获取显示器分辨率
        self.desktop = QApplication.desktop()
        self.screenRect = self.desktop.screenGeometry()
        self.screenheight = self.screenRect.height()
        self.screenwidth = self.screenRect.width()

        self.height = int(self.screenheight * 0.7)
        self.width = int(self.screenwidth * 0.7)

        #设置大小
        MainWindow.resize(self.width, self.height)
        '''
        QWidget的geometry()提供的成员函数:x()、y()获得客户区左上角的坐标，
        width()、 height()获得客户区的宽度和高度；
        '''
        self.centralwidget = QWidget(MainWindow)
        #给centralwidget命名
        self.centralwidget.setObjectName("centralwidget")
        self.cwgridLayout = QGridLayout()
        self.cwgridLayout.setRowStretch(0,1)
        self.cwgridLayout.setRowStretch(1,1)
        self.centralwidget.setLayout(self.cwgridLayout)

        self.titlelabel = QLabel('Title')
        #设置文字居中
        self.titlelabel.setAlignment(QtCore.Qt.AlignCenter)
        # font1 = QFont('Arial', 50)
        # self.titlelabel.setFont(font1)
        self.cwgridLayout.addWidget(self.titlelabel,0,0,1,1)

        '''
        QtWidgets.QWidget是PyQt5
        中的一个基类，它提供了构建用户界面的基本元素。可以将QWidget
        理解为窗口或者屏幕上的一块矩形区域，我们可以在这个区域内放置其他控件
        （比如按钮、标签等）以及自定义绘制操作。'''
        self.gridLayoutWidget = QWidget()
        #估计是行列超过了范围就会自适应大小
        self.cwgridLayout.addWidget(self.gridLayoutWidget,1,0,2,1)
        #QRect类在平面上定义了一个矩形，使用整数作为精度，左上角及宽，高
        #一个矩形正常来说是有一个左上角的点和一个尺寸来确定的
        # self.gridLayoutWidget.setGeometry(QtCore.QRect(0, 270, 1031, 351))
        #以下是为了自适应不同分辨率显示器
        #这里生成Widget

        self.gridLayout_2 = QGridLayout()
        self.gridLayoutWidget.setLayout(self.gridLayout_2)
        #设置Margins (left,top,right,bottom) 默认白色
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        #设置网格之间的间隙
        # self.gridLayout_2.setSpacing(20)
        # 设置垂直网格间距：setVerticalSpacing(spacing)
        # 设置水平网格间距：setHorizontalSpacing(spacing)
        self.gridLayout_2.setObjectName("gridLayout_2")

        # 加载QSS样式文件
        self.stylefile = 'style.qss'
        self.qssstyle = CommonHelper.readQSS(self.stylefile)

        self.listbutton = []
        #添加pushbutton到gridLayout_2
        for i in range(2):
            for j in range(4):
                button  = QPushButton('({},{})'.format(i,j))
                button.setStyleSheet(self.qssstyle)
                #需要使用样式表来设置pushbutton 样式，QSS
                # button.setStyleSheet("border-radius:15px;")
                button.setSizePolicy (QSizePolicy.Expanding, QSizePolicy.Expanding)
                self.gridLayout_2.addWidget(button,i,j,1,1)
                self.listbutton.append(button)

        #给MainWindow设置中心Widget
        MainWindow.setCentralWidget(self.centralwidget)
        # self.gridLayoutWidget.setLayout(self.gridLayout_2)

        #给MainWindow设置菜单
        self.menubar = QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1032, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        #给MainWindow设置状态bar
        self.statusbar = QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        #调用实例方法，给pushtton设置内容setText()
        QtCore.QMetaObject.connectSlotsByName(MainWindow)


